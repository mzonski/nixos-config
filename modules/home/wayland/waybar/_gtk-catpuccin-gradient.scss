// TODO: Extract this into a separate module...
$catpuccin-colors: (
	rosewater: #f5e0dc,
	flamingo: #f2cdcd,
	pink: #f5c2e7,
	mauve: #cba6f7,
	red: #f38ba8,
	maroon: #eba0ac,
	peach: #fab387,
	yellow: #f9e2af,
	green: #a6e3a1,
	teal: #94e2d5,
	sky: #89dceb,
	sapphire: #74c7ec,
	blue: #89b4fa,
);

$color-list: ();
@each $name, $color in $catpuccin-colors {
	$color-list: append($color-list, $color);
}

@mixin lr-gradient($color-start, $color-end) {
	background-image: -gtk-gradient(linear, left center, right center, from($color-start), to($color-end));

	&:hover {
		background-image: -gtk-gradient(
			linear,
			left center,
			right center,
			from(shade($color-start, 1.1)),
			to(shade($color-end, 1.1))
		);
	}
}

@function get-color-at-index($index) {
	$adjusted-index: $index % length($color-list);
	@if $adjusted-index <= 0 {
		$adjusted-index: $adjusted-index + length($color-list);
	}
	@return nth($color-list, $adjusted-index);
}

@mixin generate-gradients($offset: 0, $ids...) {
	@each $id in $ids {
		$index: index($ids, $id) - 1 + $offset;
		$start-color: get-color-at-index($index + 1);
		$end-color: get-color-at-index($index + 2);

		##{$id} {
			@include lr-gradient($start-color, $end-color);
		}
	}
}

// TODO: Extract this into a separate module...
$catpuccin-colors: (
	rosewater: #f5e0dc,
	flamingo: #f2cdcd,
	pink: #f5c2e7,
	mauve: #cba6f7,
	red: #f38ba8,
	maroon: #eba0ac,
	peach: #fab387,
	yellow: #f9e2af,
	green: #a6e3a1,
	teal: #94e2d5,
	sky: #89dceb,
	sapphire: #74c7ec,
	blue: #89b4fa,
);

$color-list: ();
@each $name, $color in $catpuccin-colors {
	$color-list: append($color-list, $color);
}

@mixin lr-gradient($color-start, $color-end) {
	background-image: -gtk-gradient(linear, left center, right center, from($color-start), to($color-end));

	&:hover {
		background-image: -gtk-gradient(
			linear,
			left center,
			right center,
			from(shade($color-start, 1.1)),
			to(shade($color-end, 1.1))
		);
	}
}

@function get-color-at-index($index) {
	$adjusted-index: $index % length($color-list);
	@if $adjusted-index <= 0 {
		$adjusted-index: $adjusted-index + length($color-list);
	}
	@return nth($color-list, $adjusted-index);
}

@mixin generate-gradients($offset: 0, $ids...) {
	@each $id in $ids {
		$index: index($ids, $id) - 1 + $offset;
		$start-color: get-color-at-index($index + 1);
		$end-color: get-color-at-index($index + 2);

		##{$id} {
			@include lr-gradient($start-color, $end-color);
		}
	}
}
